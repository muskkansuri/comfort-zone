[{"D:\\pitronix website\\pitronix\\src\\index.js":"1","D:\\pitronix website\\pitronix\\src\\reducer.js":"2","D:\\pitronix website\\pitronix\\src\\StateProvider.js":"3","D:\\pitronix website\\pitronix\\src\\App.js":"4","D:\\pitronix website\\pitronix\\src\\reportWebVitals.js":"5","D:\\pitronix website\\pitronix\\src\\Home.js":"6","D:\\pitronix website\\pitronix\\src\\Header.js":"7","D:\\pitronix website\\pitronix\\src\\Payment.js":"8","D:\\pitronix website\\pitronix\\src\\Orders.js":"9","D:\\pitronix website\\pitronix\\src\\Login.js":"10","D:\\pitronix website\\pitronix\\src\\firebase.js":"11","D:\\pitronix website\\pitronix\\src\\Checkout.js":"12","D:\\pitronix website\\pitronix\\src\\Product.js":"13","D:\\pitronix website\\pitronix\\src\\CheckoutProduct.js":"14","D:\\pitronix website\\pitronix\\src\\axios.js":"15","D:\\pitronix website\\pitronix\\src\\Order.js":"16","D:\\pitronix website\\pitronix\\src\\Subtotal.js":"17"},{"size":695,"mtime":1607765747409,"results":"18","hashOfConfig":"19"},{"size":1245,"mtime":1608092817664,"results":"20","hashOfConfig":"19"},{"size":485,"mtime":1607765060557,"results":"21","hashOfConfig":"19"},{"size":2088,"mtime":1608093128386,"results":"22","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"19"},{"size":2333,"mtime":1633334577211,"results":"24","hashOfConfig":"19"},{"size":2108,"mtime":1633336001500,"results":"25","hashOfConfig":"19"},{"size":6031,"mtime":1625077889693,"results":"26","hashOfConfig":"19"},{"size":1034,"mtime":1608101763893,"results":"27","hashOfConfig":"19"},{"size":2244,"mtime":1625070384088,"results":"28","hashOfConfig":"19"},{"size":598,"mtime":1625071124685,"results":"29","hashOfConfig":"19"},{"size":1009,"mtime":1625030986937,"results":"30","hashOfConfig":"19"},{"size":1160,"mtime":1625030316557,"results":"31","hashOfConfig":"19"},{"size":1360,"mtime":1625075090098,"results":"32","hashOfConfig":"19"},{"size":249,"mtime":1608131912536,"results":"33","hashOfConfig":"19"},{"size":1247,"mtime":1625117939733,"results":"34","hashOfConfig":"19"},{"size":1149,"mtime":1625060233556,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xqje5s",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"D:\\pitronix website\\pitronix\\src\\index.js",[],["79","80"],"D:\\pitronix website\\pitronix\\src\\reducer.js",[],"D:\\pitronix website\\pitronix\\src\\StateProvider.js",[],"D:\\pitronix website\\pitronix\\src\\App.js",["81","82"],"import React, { useEffect } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Login from './Login'\nimport Payment from \"./Payment\";\nimport Orders from \"./Orders\";\nimport {BrowserRouter as Router,Switch,Route}\nfrom \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport Checkout from './Checkout';\nimport { useStateValue } from \"./StateProvider\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nconst promise = loadStripe(\"pk_test_51Hy9LtC0cgWsSz3mszoxzEXilTQUTzd8rLqLxSPbhcYXU25o6Gym8NKx1qBDRxfc5jTcY1VhqOT7UaeJE8GXV7qn00UVvlv6GO\");\n\nfunction App() {\n    const [{}, dispatch] = useStateValue();\n\n    useEffect(() =>{\n      // will only run once when the app component loads..\n\n      auth.onAuthStateChanged(authUser =>{\n          console.log('The user is >>>',authUser);\n          if(authUser){\n              //the user just logged in/ the user was logged in\n            dispatch({\n                type:'SET_USER',\n                user:authUser\n            })\n          }else{\n              //the user is logged out\n              dispatch({\n                type:'SET_USER',\n                user:null\n            })\n          }\n      })\n    }, [])\n\n\n    return (\n        //BEM\n       <Router>\n            <div className = \"App\" >\n            \n            <Switch>\n            <Route path=\"/orders\">\n                <Header/>\n                <Orders/>\n                </Route>\n            <Route path=\"/login\">\n                <Login/>\n                </Route>\n                <Route path=\"/checkout\">\n                <Header/>\n                <Checkout/>\n                </Route>\n                <Route path=\"/payment\">\n                <Header/>\n                <Elements stripe={promise}>\n                   <Payment/>\n                </Elements>\n                  </Route>\n                <Route path=\"/\">\n                <Header/>\n                <Home/>\n                </Route>\n            </Switch>\n             </div >\n       </Router>\n       \n    );\n}\n\nexport default App;","D:\\pitronix website\\pitronix\\src\\reportWebVitals.js",[],"D:\\pitronix website\\pitronix\\src\\Home.js",[],"D:\\pitronix website\\pitronix\\src\\Header.js",["83","84"],"D:\\pitronix website\\pitronix\\src\\Payment.js",["85"],"import React, { useState, useEffect } from 'react';\r\nimport './Payment.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from './axios';\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements(); \r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(()=>{\r\n         // generate the special stripe secret which allows us to charge a customer\r\n         const getClientSecret = async()=>{\r\n             //axios used for requests like get,put\r\n             const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n         }\r\n\r\n         getClientSecret();\r\n    },[basket])\r\n    console.log('The secret is >>',clientSecret)\r\n    \r\n    \r\n   const handleSubmit= async(event)=>{\r\n       // no refreshing\r\n         event.preventDefault();\r\n         //button is disabled ie you cant click it 5 times only 1 time\r\n         setProcessing(true);\r\n\r\n         const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // paymentIntent = payment confirmation\r\n            db\r\n              .collection('users')\r\n              .doc(user?.uid)\r\n            .collection('orders')\r\n            .doc(paymentIntent.id)\r\n            .set({\r\n                basket:basket,\r\n                amount:paymentIntent.amount,\r\n                created:paymentIntent.created  \r\n            })\r\n\r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n            dispatch({\r\n                type:'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n   }\r\n   const handleChange= event=>{\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n   }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment__container'>\r\n            <h1>\r\n                    Checkout (\r\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                        )\r\n                </h1>\r\n\r\n              {/* Payment section - delivery address */}\r\n             <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment__address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Bengaluru, India</p>\r\n                    </div>\r\n                 </div>\r\n                {/* Payment section - Review Items */}\r\n                <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment__items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>   \r\n                  {/* Payment section - Payment method */}\r\n                  <div className='payment__section'>\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                       <div className='payment__details'>\r\n                           <form onSubmit={handleSubmit}>\r\n                               <CardElement onChange={handleChange} />\r\n                               <div className='payment__priceContainer'>\r\n                               <CurrencyFormat\r\n                                        renderText={(value) => (\r\n                                            <h3>Order Total: {value}</h3>\r\n                                        )}\r\n                                        decimalScale={2}\r\n                                        value={getBasketTotal(basket)}\r\n                                        displayType={\"text\"}\r\n                                        thousandSeparator={true}\r\n                                        prefix={\"₹\"}\r\n                                    />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                               </div>\r\n                               {/*Errors*/}\r\n                               {error && <div>{error}</div>}\r\n                           </form>\r\n                       </div>\r\n\r\n                    </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","D:\\pitronix website\\pitronix\\src\\Orders.js",["86","87"],"import React, { useState, useEffect } from 'react';\r\nimport { db } from \"./firebase\";\r\nimport './Orders.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Order from './Order'\r\n\r\nfunction Orders() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(user) {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('orders')\r\n        .orderBy('created', 'desc')\r\n        .onSnapshot(snapshot => (\r\n            setOrders(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        ))\r\n    } else {\r\n        setOrders([])\r\n    }\r\n\r\n  }, [user])\r\n\r\n    return (\r\n        <div className='orders'>\r\n            <h1>Your Orders</h1>\r\n\r\n            <div className='orders__order'>\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders","D:\\pitronix website\\pitronix\\src\\Login.js",["88"],"import React, { useState } from 'react';\r\nimport './Login.css'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\n\r\nfunction Login() {\r\n    const history=useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const signIn = e => {\r\n        e.preventDefault();\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n                history.push('/')\r\n            })\r\n            .catch(error => alert(error.message))\r\n\r\n    }\r\n    const register = e => {\r\n        e.preventDefault();\r\n\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then((auth) =>{\r\n            console.log(auth);\r\n            if(auth){\r\n                history.push('/')\r\n            }\r\n        })\r\n        .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n               <Link to='/'>\r\n                <img\r\n                    className=\"login__logo\"\r\n                    src = \"https://pitronix.in/wp-content/uploads/2020/10/cropped-PiTronix_logo_140x68.png\"/>\r\n\r\n                \r\n            </Link>\r\n            <div className='login__container'>\r\n                <h1>Sign In</h1>\r\n                <form>\r\n                    <h5>E-mail</h5>\r\n                        <input type='text' value={email} onChange=\r\n                        {e => setEmail(e.target.value)}/>\r\n                    \r\n                    <h5>Password</h5>\r\n                        <input type='password' value={password} onChange=\r\n                        {e => setPassword(e.target.value)}/>\r\n                   <button type='submit' onClick={signIn}\r\n                   className='login__signInButton'>Sign In</button>\r\n                </form>\r\n                <p>\r\n                    By signing-in you agree to the PiTronix's Conditions of Use & Sale. Please\r\n                    see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.\r\n                </p>\r\n                <button onClick={register}\r\n                className='login__registerButton'>Create your Account</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\pitronix website\\pitronix\\src\\firebase.js",[],"D:\\pitronix website\\pitronix\\src\\Checkout.js",["89"],"import React from 'react'\r\nimport './Checkout.css'\r\nimport Subtotal from './Subtotal'\r\nimport CheckoutProduct from './CheckoutProduct'\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Checkout() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n        <div className=\"checkout__left\">\r\n            \r\n             <div>\r\n               <h3>Hello, {user?.email}</h3>\r\n               <h2 className=\"checkout__title\">\r\n                   Your Shopping Basket\r\n               </h2>  \r\n               {basket.map(item => (\r\n            <CheckoutProduct\r\n              \r\n              title={item.title}\r\n              image={item.image}\r\n              price={item.price}\r\n              rating={item.rating}\r\n            />\r\n          ))}\r\n             </div>\r\n        </div>\r\n        <div className=\"checkout__right\">\r\n            <Subtotal/>\r\n            \r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\pitronix website\\pitronix\\src\\Product.js",["90"],"import React from 'react'\r\nimport \"./Product.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nfunction Product({title, image, price, rating}) {\r\n    const [{basket}, dispatch] = useStateValue();\r\n  \r\n    const addToBasket =()=>{\r\n        //dispatch the item into the data layer\r\n        dispatch({\r\n           type:'ADD_TO_BASKET',\r\n           item:{\r\n               title:title,\r\n               image:image,\r\n               price:price,\r\n               rating:rating,\r\n           }, \r\n        });\r\n    };\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product__info\">\r\n            <p>{title}</p>\r\n            <p className=\"product__price\">\r\n                <small>₹</small>\r\n                <strong>{price}</strong>\r\n            </p>\r\n            <div className=\"product__rating\">\r\n            {Array(rating).fill().map((_, i) => (\r\n              <p>🌟</p>\r\n            ))}\r\n            \r\n            </div>\r\n            </div>\r\n            <img src={image}\r\n                alt=\"\"\r\n            />\r\n            <button onClick={addToBasket}>Add to Basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","D:\\pitronix website\\pitronix\\src\\CheckoutProduct.js",["91","92"],"import React from 'react'\r\nimport './CheckoutProduct.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction CheckoutProduct({image,title,price,rating, hideButton}) {\r\n    const [{ basket }, dispatch] = useStateValue();\r\n    const removeFromBasket = () => {\r\n        // remove the item from the basket\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            title:title,\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className='checkoutProduct'>\r\n            <img className='checkoutProduct__image'\r\n            src={image}/>\r\n            <div className='checkoutProduct__info' >\r\n                   <p className='checkoutProduct__title'>{title}</p>\r\n                   <p className=\"checkoutProduct__price\">\r\n                       <small>₹</small>\r\n                       <strong>{price}</strong>\r\n                   </p>\r\n                   <div className=\"checkoutProduct__rating\">\r\n                   {Array(rating)\r\n                    .fill()\r\n                    .map((_, i) => (\r\n                        <p>🌟</p>\r\n                    ))}\r\n                   </div>\r\n                   {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\r\n                   )}\r\n                 \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","D:\\pitronix website\\pitronix\\src\\axios.js",[],"D:\\pitronix website\\pitronix\\src\\Order.js",[],"D:\\pitronix website\\pitronix\\src\\Subtotal.js",["93"],"import React from 'react'\r\nimport './Subtotal.css'\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Subtotal() {\r\n    const history= useHistory();\r\n    const [{basket}, dispatch] = useStateValue();\r\n    return (\r\n        <div className='subtotal'>\r\n            <CurrencyFormat\r\n        renderText={(value) => (\r\n          <>\r\n            <p>\r\n              {/* Part of the homework */}\r\n              Subtotal ({basket.length} items): <strong>{value}</strong>\r\n            </p>\r\n            <small className=\"subtotal__gift\">\r\n              <input type=\"checkbox\" /> This order contains a gift\r\n            </small>\r\n          </>\r\n        )}\r\n        decimalScale={2}\r\n        value={getBasketTotal(basket)} // Part of the homework\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"₹\"}\r\n      />\r\n      <button onClick={e => history.push('/payment')}>\r\n          Proceed to Checkout\r\n      </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal;\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":19,"column":12,"nodeType":"100","messageId":"101","endLine":19,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":40,"column":8,"nodeType":"104","endLine":40,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":12,"column":26,"nodeType":"108","messageId":"109","endLine":12,"endColumn":34},{"ruleId":"110","severity":1,"message":"111","line":23,"column":9,"nodeType":"112","endLine":24,"endColumn":118},{"ruleId":"106","severity":1,"message":"113","line":47,"column":16,"nodeType":"108","messageId":"109","endLine":47,"endColumn":23},{"ruleId":"106","severity":1,"message":"114","line":8,"column":12,"nodeType":"108","messageId":"109","endLine":8,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":8,"column":28,"nodeType":"108","messageId":"109","endLine":8,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":36,"column":17,"nodeType":"112","endLine":38,"endColumn":110},{"ruleId":"106","severity":1,"message":"107","line":7,"column":28,"nodeType":"108","messageId":"109","endLine":7,"endColumn":36},{"ruleId":"106","severity":1,"message":"114","line":5,"column":13,"nodeType":"108","messageId":"109","endLine":5,"endColumn":19},{"ruleId":"106","severity":1,"message":"114","line":6,"column":14,"nodeType":"108","messageId":"109","endLine":6,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":17,"column":13,"nodeType":"112","endLine":18,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":10,"column":22,"nodeType":"108","messageId":"109","endLine":10,"endColumn":30},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'payload' is assigned a value but never used.","'basket' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [dispatch]",{"range":"120","text":"121"},[1252,1254],"[dispatch]"]